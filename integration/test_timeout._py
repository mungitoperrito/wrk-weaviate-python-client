from pathlib import Path
from integration.conftest import CollectionFactory
from integration.constants import WEAVIATE_LOGO_NEW_ENCODED, WEAVIATE_LOGO_OLD_ENCODED
import weaviate
from weaviate.collections.classes.config import DataType
import base64
import os
import weaviate.classes as wvc


# Helper function to convert a file to base64 representation
def toBase64(path):
    with open(path, "rb") as file:
        return base64.b64encode(file.read()).decode("utf-8")


def test_timeout2(collection_factory: CollectionFactory) -> None:
    animals = collection_factory(
        vectorizer_config=wvc.Configure.Vectorizer.img2vec_neural(image_fields=["image"]),
        properties=[
            wvc.Property(name="name", data_type=wvc.DataType.TEXT),
            wvc.Property(name="image", data_type=wvc.DataType.BLOB),
        ],
        timeout=(10, 30),
    )

    source = os.listdir("/Users/dirkkulawiak/Downloads/image/")
    items = list()

    for name in source:
        path = Path("/Users/dirkkulawiak/Downloads/image/") / name
        items.append(
            {
                "name": name,  # name of the file
                "image": toBase64(
                    path
                ),  # this gets vectorized - "image" was configured in vectorizer_config as the property holding images
            }
        )

        # import images in batches of 5
        # if (len(items) > 5):
        #     print(f"Inserting 5 new image objects.")
        #     animals.data.insert_many(items)
        #     items.clear()

    # Insert any remaining items
    if len(items) > 0:
        print(f"Inserting ({len(items)}) items.")
        resp = animals.data.insert_many(items)
        if resp.has_errors:
            print("something went wrong")
            for i, error in resp.errors.items():
                print(i, error)


def test_timeout(collection_factory: CollectionFactory) -> None:
    client = weaviate.connect_to_wcs(cluster_url="https://piblpmmdsiknacjnm1ltla.c1.europe-west3.gcp.weaviate.cloud", auth_credentials=weaviate.auth.AuthApiKey("NOg5AliYnrN6z7dZDuGv7SLVKhTabAaSTKS7"))
    client.collections.delete("timeouttesting")

    collection = client.collections.create(
        name="timeouttesting",
        vectorizer_config=wvc.Configure.Vectorizer.text2vec_openai(),
        properties=[
            wvc.Property(name="image", data_type=wvc.DataType.BLOB),
        ],
    )
    collection.data.insert_many(
        [{"image": WEAVIATE_LOGO_OLD_ENCODED}, {"image": WEAVIATE_LOGO_NEW_ENCODED}] * 40
    )
