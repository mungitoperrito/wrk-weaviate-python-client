on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:

permissions:
  contents: write

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.version }}
        cache: 'pip' # caching pip dependencies
    - run: pip install -r requirements.txt
    - name: Run unittests
      run: pytest --cov --cov-report=term-missing --cov=weaviate --cov-report xml:coverage.xml test
    - name: Upload to codecov
      if: matrix.version == '3.10' && (github.ref_name != 'master')
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true
        files: ./coverage.xml
        flags: unittests

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    strategy:
      matrix:
        version: [  "3.7", "3.8", "3.9", "3.10" ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.version }}
          cache: 'pip' # caching pip dependencies
      - run: |
          pip install -r requirements.txt
          pip install .
      - name: Run integration tests
        run: |
          /bin/bash ci/start_weaviate.sh
          pytest --cov --cov-report=term-missing --cov=weaviate --cov-report xml:coverage.xml integration
      - name: Upload to codecov
        if: matrix.version == '3.10' && (github.ref_name != 'master')
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          files: ./coverage.xml
          flags: unittests
  build-and-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - integration-tests
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install pypa/build
        run: python -m pip install build --user --upgrade
      - name: Build a binary wheel and a source tarball
        run: python setup.py sdist bdist_wheel
      - name: Publish distribution üì¶ to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          password: ${{ secrets.PYPI_API_TOKEN }}
